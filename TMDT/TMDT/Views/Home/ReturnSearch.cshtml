@model PagedList.IPagedList<TMDT.Product>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "ReturnSearch";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content">
    <div class="content_top">
        <div class="heading">
            <h3>Kết quả tìm kiếm</h3>
        </div>
        <div class="clear"></div>
    </div>
    <div class="section group">
        @foreach (var item in Model)
        {
            <div class="grid_1_of_4 images_1_of_4" style="margin-left:0px;margin-right:1%" >
                <a href="@Url.Action("Details","Home", new { id=item.ProductID})"><img src="@Url.Content("/public/MyImages/"+Html.DisplayFor(modelitem => item.Image))" /></a>
                <h2>@Html.DisplayFor(modelitem => item.ProductName)</h2>
                <div class="price-details">
                    <div class="add-cart">
                        <h4> @Html.ActionLink("Thêm vào giỏ", "AddToCart", "CartItem", new { id = item.ProductID }, "")</h4>
                    </div>
                    <div class="price-number">
                        <p>
                            @if (item.Discount <= 0)
                            {
                                <span class="rupees">$@(item.Price.HasValue ? item.Price.Value.ToString("N0") : "Liên hệ")</span>
                            }
                            else
                            {
                                <span class="rupees"><del>$@(item.Price.HasValue ? item.Price.Value.ToString("N0") : "Liên hệ")</del></span>
                                int price = int.Parse(item.Price.HasValue ? item.Price.Value.ToString("N0") : "Liên hệ") * item.Discount / 100;
                                <span class="rupees" style="color:red"> $@price</span>
                            }
                        </p>

                    </div>
                    <div class="clear"></div>
                </div>
            </div>
        }
    </div>
</div>
@Html.PagedListPager(Model, page => Url.Action("ReturnSearch",new { page, currentFilter = ViewBag.CurrentFilter, currentmerchant = ViewBag.CurrentMerchant, currentcategory = ViewBag.CurrentCategory, curpricetext1= ViewBag.CurrentP1,curpricetext2 = ViewBag.CurrentP2}),PagedListRenderOptions.ClassicPlusFirstAndLast)
